version: '3'

services:
  djangoapp:
    build: .
    image: &djangoapp djangoapp
    volumes:
      - .:/opt/services/djangoapp/src
      - static_volume:/opt/services/djangoapp/static  # <-- bind the static volume
      - media_volume:/opt/services/djangoapp/media  # <-- bind the media volume
    networks:
      - nginx_network
      - database1_network  # <-- connect to the bridge
      - broker_network
    depends_on:  # <-- wait for db to be "ready" before starting the app
      - database1
      - broker

  nginx:
    image: nginx:1.13
    ports:
      - 8000:80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/opt/services/djangoapp/static  # <-- bind the static volume
      - media_volume:/opt/services/djangoapp/media  # <-- bind the media volume
    depends_on:
      - djangoapp
    networks:
      - nginx_network

  database1:  # <-- IMPORTANT: same name as in DATABASES setting, otherwise Django won't find the database!
    image: postgres:10
    env_file:  # <-- we use the previously defined values
      - config/db/crawlerdb_env
    networks:  # <-- connect to the bridge
      - database1_network
    volumes:
      - database1_volume:/var/lib/postgresql/data

  worker:
    build: .
    image: *djangoapp
    restart: "no"
    env_file:
      - config/worker/worker_env
    command: ["celery", "worker", "--app=worker.worker.app", "--concurrency=1", "--hostname=worker@%h", "--loglevel=INFO"]
    volumes:
      - .:/opt/services/djangoapp/src
    depends_on:
      - broker
    networks: 
      - broker_network
    
  flower:
    image: zoomeranalytics/flower:0.9.1-4.0.2
    restart: "no"
    env_file:
       - config/worker/worker_env
    ports:
      - "5555:5555"
    depends_on:
      - broker
    networks: 
      - broker_network

  broker:
    image: rabbitmq:3
    env_file: 
       - config/worker/worker_env
    ports:
      - 5672:5672
    networks: 
      - broker_network


networks: 
  nginx_network:
    driver: bridge
  database1_network:  # <-- add the bridge
    driver: bridge
  broker_network:
    driver: bridge
  

volumes:
  database1_volume:
  static_volume:  # <-- declare the static volume
  media_volume:  # <-- declare the media volume